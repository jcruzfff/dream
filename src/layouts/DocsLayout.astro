---
import Layout from './Layout.astro';
import '../styles/docs-layout.css';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<Layout title={title}>
  <div class="docs-container">
    <!-- Sidebar -->
    <aside class="sidebar">
      <div class="sidebar-content">
        <a href="/" class="home-button">
          <div class="logo">
            <img src="/dream-logo.svg" alt="DREAM" />
            <span>DREAM</span>
          </div>
        </a>
        
        <div class="sidebar-header">
          <h3>Resources</h3>
        </div>
        <nav class="sidebar-nav">
          <ul>
            <li>
              <a href="#tokenomics" class="nav-item">
                <span>Tokenomics</span>
              </a>
            </li>
            <li>
              <a href="#staking" class="nav-item">
                <span>Staking</span>
              </a>
            </li>
            <li>
              <a href="#mathematics" class="nav-item">
                <span>Mathematics</span>
              </a>
            </li>
            <li>
              <a href="#governance" class="nav-item">
                <span>Governance</span>
              </a>
            </li>
            <li>
              <a href="#nfts" class="nav-item">
                <span>NFTs</span>
              </a>
            </li>
            <li>
              <a href="#contracts" class="nav-item">
                <span>Smart Contracts</span>
              </a>
            </li>
            <li>
              <a href="#community" class="nav-item">
                <span>Community</span>
              </a>
            </li>
            <li>
              <a href="#resources" class="nav-item">
                <span>Resources</span>
              </a>
            </li>
          </ul>
        </nav>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Header with Search and Nav -->
      <div class="header-container">
        <button class="mobile-menu-button" id="mobileMenuButton">
          <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-16 6h16" />
          </svg>
        </button>
        <div class="search-container">
          <div class="search-wrapper">
            <div class="search-icon">
              <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
            <input 
              type="text" 
              placeholder="Find something..." 
              class="search-input"
              id="searchInput"
            />
            <span class="search-shortcut">⌘K</span>
            <div class="search-results" id="searchResults"></div>
          </div>
        </div>
        <div class="header-nav">
          <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme">
            <svg class="moon-icon" width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>
            </svg>
            <svg class="sun-icon" width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="display: none;">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
              <circle cx="12" cy="12" r="5" stroke-width="2"/>
            </svg>
          </button>
        </div>
      </div>

      <!-- Content -->
      <div class="content">
        <slot />
      </div>

      <!-- Footer -->
      <footer class="docs-footer">
        <div class="feedback">
          <span>Was this page helpful?</span>
          <button class="feedback-btn">Yes</button>
          <button class="feedback-btn">No</button>
        </div>
        <div class="copyright">
          © Copyright 2024. All rights reserved.
        </div>
      </footer>
    </main>
  </div>
</Layout>

<!-- Add mobile sidebar -->
<div class="mobile-sidebar" id="mobileSidebar">
  <div class="mobile-sidebar-header">
    <button class="mobile-menu-close" id="mobileMenuClose">
      <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
  <!-- Copy sidebar content here -->
  <div class="sidebar-content">
    <a href="/" class="home-button">
      <div class="logo">
        <img src="/dream-logo.svg" alt="DREAM" />
        <span>DREAM</span>
      </div>
    </a>
    
    <div class="sidebar-header">
      <h3>Resources</h3>
    </div>
    <nav class="sidebar-nav">
      <ul>
        <li>
          <a href="#tokenomics" class="nav-item">
            <span>Tokenomics</span>
          </a>
        </li>
        <li>
          <a href="#staking" class="nav-item">
            <span>Staking</span>
          </a>
        </li>
        <li>
          <a href="#mathematics" class="nav-item">
            <span>Mathematics</span>
          </a>
        </li>
        <li>
          <a href="#governance" class="nav-item">
            <span>Governance</span>
          </a>
        </li>
        <li>
          <a href="#nfts" class="nav-item">
            <span>NFTs</span>
          </a>
        </li>
        <li>
          <a href="#contracts" class="nav-item">
            <span>Smart Contracts</span>
          </a>
        </li>
        <li>
          <a href="#community" class="nav-item">
            <span>Community</span>
          </a>
        </li>
        <li>
          <a href="#resources" class="nav-item">
            <span>Resources</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</div>

<script>
  // Search functionality
  const searchInput = document.getElementById('searchInput') as HTMLInputElement;
  const searchResults = document.getElementById('searchResults');
  
  // Get all sections and their content
  const sections = document.querySelectorAll('.doc-section');
  const searchableContent = Array.from(sections).map(section => ({
    id: section.id,
    title: section.querySelector('h2')?.textContent || '',
    content: section.textContent || '',
    headings: Array.from(section.querySelectorAll('h3')).map(h => h.textContent || '')
  }));

  function performSearch(query: string) {
    if (!searchResults) return;
    
    if (!query.trim()) {
      searchResults.classList.remove('active');
      return;
    }

    const results = searchableContent.flatMap(section => {
      const matchingHeadings = section.headings.filter(heading =>
        heading.toLowerCase().includes(query.toLowerCase())
      );

      if (
        section.title.toLowerCase().includes(query.toLowerCase()) ||
        section.content.toLowerCase().includes(query.toLowerCase()) ||
        matchingHeadings.length > 0
      ) {
        return [{
          id: section.id,
          title: section.title,
          heading: matchingHeadings[0] || section.title
        }];
      }
      return [];
    });

    if (results.length > 0) {
      searchResults.innerHTML = results
        .map(result => `
          <div class="search-result-item" data-section-id="${result.id}">
            <div class="result-title">${result.heading}</div>
            <div class="result-section">${result.title}</div>
          </div>
        `)
        .join('');
      searchResults.classList.add('active');
    } else {
      searchResults.innerHTML = `
        <div class="search-result-item">
          <div class="result-title">No results found</div>
        </div>
      `;
      searchResults.classList.add('active');
    }
  }

  // Event listeners
  searchInput?.addEventListener('input', (e) => {
    performSearch((e.target as HTMLInputElement).value);
  });

  document.addEventListener('click', (e) => {
    if (!searchInput?.contains(e.target as Node)) {
      searchResults?.classList.remove('active');
    }
  });

  searchResults?.addEventListener('click', (e) => {
    const resultItem = (e.target as HTMLElement).closest('.search-result-item');
    if (resultItem) {
      const sectionId = resultItem.getAttribute('data-section-id');
      if (sectionId) {
        const section = document.getElementById(sectionId);
        section?.scrollIntoView({ behavior: 'smooth' });
        searchResults.classList.remove('active');
        searchInput.value = '';
      }
    }
  });

  // Command/Ctrl + K to focus search
  document.addEventListener('keydown', (e) => {
    if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
      e.preventDefault();
      searchInput?.focus();
    }
  });

  // Close search results on Escape
  searchInput?.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      searchResults?.classList.remove('active');
      searchInput.blur();
    }
  });

  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobileMenuButton');
  const mobileMenuClose = document.getElementById('mobileMenuClose');
  const mobileSidebar = document.getElementById('mobileSidebar');

  mobileMenuButton?.addEventListener('click', () => {
    mobileSidebar?.classList.add('active');
    document.body.style.overflow = 'hidden';
  });

  mobileMenuClose?.addEventListener('click', () => {
    mobileSidebar?.classList.remove('active');
    document.body.style.overflow = '';
  });

  // Close mobile menu when clicking a link
  const mobileNavItems = mobileSidebar?.querySelectorAll('.nav-item');
  mobileNavItems?.forEach(item => {
    item.addEventListener('click', () => {
      mobileSidebar?.classList.remove('active');
      document.body.style.overflow = '';
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (
      mobileSidebar?.classList.contains('active') &&
      !mobileSidebar.contains(e.target as Node) &&
      !mobileMenuButton?.contains(e.target as Node)
    ) {
      mobileSidebar.classList.remove('active');
      document.body.style.overflow = '';
    }
  });

  const themeToggle = document.getElementById('themeToggle');
  const moonIcon = themeToggle?.querySelector('.moon-icon') as HTMLElement | null;
  const sunIcon = themeToggle?.querySelector('.sun-icon') as HTMLElement | null;
  
  // Check for saved theme preference
  const savedTheme = localStorage.getItem('theme') || 'dark';
  document.documentElement.setAttribute('data-theme', savedTheme);
  
  // Update icon visibility based on current theme
  function updateIcons(theme: string) {
    if (moonIcon && sunIcon) {
      moonIcon.style.display = theme === 'light' ? 'none' : 'block';
      sunIcon.style.display = theme === 'light' ? 'block' : 'none';
    }
  }
  
  // Initialize icons
  updateIcons(savedTheme);
  
  // Toggle theme
  themeToggle?.addEventListener('click', () => {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateIcons(newTheme);
  });
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .theme-toggle:hover {
    background: var(--surface);
  }

  .moon-icon,
  .sun-icon {
    color: var(--text-primary);
    transition: color 0.2s;
  }
</style> 